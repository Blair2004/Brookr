{"version":3,"sources":["./src/app/services/drivers.service.ts","./src/app/services/loads.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAA2C;AACY;AAKvD;IAEE,wBACU,MAAqB;QAArB,WAAM,GAAN,MAAM,CAAe;QAE7B,IAAI,CAAC,OAAO,GAAM,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;QACtC,OAAO,CAAC,GAAG,CAAE,IAAI,CAAC,OAAO,CAAE,CAAC;IAC9B,CAAC;IAED,kCAAS,GAAT,UAAW,IAAI,EAAE,UAAiB;QAAjB,8CAAiB;QAChC,OAAO,IAAI,CAAC,MAAM,CAAE,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAE,CAAE,IAAI,CAAC,OAAO,IAAG,oBAAiB,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,EAAE,CAAG,GAAE,IAAI,CAAE,CAAC;IACrJ,CAAC;IAED,qCAAY,GAAZ,UAAc,EAAE;QACd,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE,IAAI,CAAC,OAAO,GAAG,iBAAiB,GAAG,EAAE,CAAE,CAAC;IACrE,CAAC;IAED,mCAAU,GAAV;QACE,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAE,IAAI,CAAC,OAAO,GAAG,gBAAgB,CAAE,CAAC;IAC5D,CAAC;IAED,yCAAgB,GAAhB;QACE,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAE,IAAI,CAAC,OAAO,GAAG,mCAAmC,CAAE,CAAC;IAC/E,CAAC;IAED,wCAAe,GAAf;QACE,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAE,IAAI,CAAC,OAAO,GAAG,kCAAkC,CAAE,CAAC;IAC9E,CAAC;;gBAxBiB,oEAAa;;IAHpB,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIkB,oEAAa;OAHpB,cAAc,CA4B1B;IAAD,qBAAC;CAAA;AA5B0B;;;;;;;;;;;;;;;;;;;;;;;;;;ACNgB;AACY;AAKvD;IAEE,sBACU,MAAqB;QAArB,WAAM,GAAN,MAAM,CAAe;QAE7B,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;IACtC,CAAC;IAED,oCAAa,GAAb,UAAe,MAAM,EAAE,KAAiB;QAAjB,yCAAiB;QACtC,OAAO,IAAI,CAAC,MAAM,CAAE,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAE,CAAK,IAAI,CAAC,OAAO,qBAAe,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAE,EAAE,MAAM,CAAE,CAAC;IACrJ,CAAC;IAED,yCAAkB,GAAlB;QACE,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAK,IAAI,CAAC,OAAO,4BAAyB,CAAE,CAAC;IACrE,CAAC;;gBAXiB,oEAAa;;IAHpB,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIkB,oEAAa;OAHpB,YAAY,CAexB;IAAD,mBAAC;CAAA;AAfwB","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { TendooService } from '@cloud-breeze/services';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DriversService {\n  baseUrl: string;\n  constructor(\n    private tendoo: TendooService\n  ) { \n    this.baseUrl    = this.tendoo.baseUrl;\n    console.log( this.baseUrl );\n  }\n\n  setDriver( form, identifier = null ) {\n    return this.tendoo[ identifier === null ? 'post' : 'put' ]( this.baseUrl + `brookr/drivers${identifier !== null ? '/' + identifier : '' }`, form );\n  }\n\n  deleteDriver( id ) {\n    return this.tendoo.delete( this.baseUrl + 'brookr/drivers/' + id );\n  }\n\n  getDrivers() {\n    return this.tendoo.get( this.baseUrl + 'brookr/drivers' );\n  }\n\n  getByMedicalCard() {\n    return this.tendoo.get( this.baseUrl + 'brookr/drivers/medical-expiration' );\n  }\n\n  getByDriverCard() {\n    return this.tendoo.get( this.baseUrl + 'brookr/drivers/driver-expiration' );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TendooService } from '@cloud-breeze/services';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadsService {\n  baseUrl: string;\n  constructor(\n    private tendoo: TendooService\n  ) { \n    this.baseUrl  = this.tendoo.baseUrl;\n  }\n\n  registerLoads( fields, index = undefined ) {\n    return this.tendoo[ index === undefined ? 'post' : 'post' ]( `${this.baseUrl}brookr/loads${index !== undefined ? '/edit/' + index : ''}`, fields );\n  }\n\n  getUnassignedLoads() {\n    return this.tendoo.get( `${this.baseUrl}brookr/loads/unassigned` );\n  }\n}\n"],"sourceRoot":"webpack:///"}